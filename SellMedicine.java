
import Common.OpenPdf;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.table.TableModel;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import dao.PharmacyUtils;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author DELL
 */
public class SellMedicine extends javax.swing.JFrame {

    public String numberPattern = "^[0-9]*$";
    private double finalTotalPrice = 0.0;
    private String billId = "";
    private String username = "";

    /**
     * Creates new form SellMedicine
     */
    public SellMedicine() {
        initComponents();

    }

    public SellMedicine(String tempUsername) {
        initComponents();
        username = tempUsername;
        setLocationRelativeTo(null);

    }
    private Connection con;

    private void medicineName(String nameOrmedId) {
        DefaultTableModel model = (DefaultTableModel) medicineTable.getModel();
        model.setRowCount(0);
        try {
            String url = "jdbc:mysql://localhost:3306/pharmacy";
            con = DriverManager.getConnection(url, "root", "lahiru@123");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM medicine WHERE name LIKE '" + nameOrmedId + "%' OR medid LIKE '" + nameOrmedId + "%'");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("medid") + "-" + rs.getString("name")});
            }

        } catch (SQLException e) {
            e.printStackTrace();

        }
    }

    private void clearMedicineFeilds() {
        txtmedid.setText("");
        txtname.setText("");
        txtcompanyname.setText("");
        txtpriceperunit.setText("");
        txtnoofunits.setText("");
        txttotalprice.setText("");

    }

    public String getMedId(String prefix) {
        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtserach = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtmedid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtcompanyname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtpriceperunit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtnoofunits = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txttotalprice = new javax.swing.JTextField();
        btnAddtoCart = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        lblFinalTotalPrice = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sell Medicine");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 6, 276, 74));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 112, 72, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1055, 6, -1, -1));

        txtserach.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtserach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtserachKeyReleased(evt);
            }
        });
        getContentPane().add(txtserach, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 146, 266, 30));

        medicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine"
            }
        ));
        medicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicineTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(medicineTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 205, 266, 444));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Medicine ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 111, 84, 21));
        getContentPane().add(txtmedid, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 144, 275, 32));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(412, 188, 37, -1));
        getContentPane().add(txtcompanyname, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 324, 275, 32));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Company Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 288, 107, -1));
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 238, 275, 32));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Price Per Unit");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(767, 111, 109, -1));
        getContentPane().add(txtpriceperunit, new org.netbeans.lib.awtextra.AbsoluteConstraints(756, 144, 275, 32));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("No of Units");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(777, 205, 104, -1));

        txtnoofunits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtnoofunitsMouseReleased(evt);
            }
        });
        txtnoofunits.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnoofunitsKeyReleased(evt);
            }
        });
        getContentPane().add(txtnoofunits, new org.netbeans.lib.awtextra.AbsoluteConstraints(767, 238, 275, 32));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total Price");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(767, 288, 132, 24));
        getContentPane().add(txttotalprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(767, 324, 275, 32));

        btnAddtoCart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddtoCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add to cart.png"))); // NOI18N
        btnAddtoCart.setText("Add to Cart");
        btnAddtoCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddtoCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddtoCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(809, 374, -1, -1));

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Name", "Company Name", "Price Per Unit", "Number of Units", "Total Price"
            }
        ));
        cartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cartTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 410, 640, 330));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("LKR");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 730, 61, -1));

        lblFinalTotalPrice.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblFinalTotalPrice.setForeground(new java.awt.Color(255, 255, 255));
        lblFinalTotalPrice.setText("0.00");
        getContentPane().add(lblFinalTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 730, 93, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/generate bill & print.png"))); // NOI18N
        jButton3.setText("Purchase & Generate");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 375, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adminDashboardBackground.png"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -120, 1090, 1010));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int a = JOptionPane.showConfirmDialog(null, "Do You want to Logout", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            setVisible(false);
            new PharmacistDashBoard().setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        medicineName("");
        txtmedid.setEditable(false);
        txtname.setEditable(false);
        txtcompanyname.setEditable(false);
        txtpriceperunit.setEditable(false);
        txtnoofunits.setEditable(true);
        txttotalprice.setEditable(false);

    }//GEN-LAST:event_formComponentShown

    private void txtserachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtserachKeyReleased
        String search = txtserach.getText();
        medicineName(search);
    }//GEN-LAST:event_txtserachKeyReleased

    private void medicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicineTableMouseClicked
        int index = medicineTable.getSelectedRow();
        TableModel model = medicineTable.getModel();
        String nameOrmedId = model.getValueAt(index, 0).toString();
        String medId[] = nameOrmedId.split("-", 0);
        try {
            String url = "jdbc:mysql://localhost:3306/pharmacy";
            con = DriverManager.getConnection(url, "root", "lahiru@123");
            String query = "SELECT * FROM medicine WHERE medid = ?";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, medId[0]);

            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                txtmedid.setText(medId[0]);
                txtname.setText(rs.getString("name"));
                txtcompanyname.setText(rs.getString("companyname"));
                txtpriceperunit.setText(rs.getString("priceperunit"));
                txtnoofunits.setText("");
                txttotalprice.setText("");

            }
        } catch (SQLException e) {
            e.printStackTrace();

        }
    }//GEN-LAST:event_medicineTableMouseClicked

    private void txtnoofunitsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtnoofunitsMouseReleased

    }//GEN-LAST:event_txtnoofunitsMouseReleased

    private void txtnoofunitsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnoofunitsKeyReleased
        String noOfUnits = txtnoofunits.getText();

        if (!noOfUnits.equals("")) {
            String price = txtpriceperunit.getText();
            double total = Double.parseDouble(noOfUnits) * Double.parseDouble(price);
            txttotalprice.setText(String.valueOf(total));

        } else {
            txttotalprice.setText("");

        }

    }//GEN-LAST:event_txtnoofunitsKeyReleased

    private void btnAddtoCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddtoCartActionPerformed
        String noOfUnits = txtnoofunits.getText();
        String medid = txtmedid.getText();
        if (!noOfUnits.equals("") && !medid.equals("")) {
            String name = txtname.getText();
            String companyname = txtcompanyname.getText();
            String priceperunit = txtpriceperunit.getText();
            String totalprice = txttotalprice.getText();
            int checkStock = 0;
            int checkMedicineAlreadyExistInCart = 0;
            try {
                String url = "jdbc:mysql://localhost:3306/pharmacy";
                con = DriverManager.getConnection(url, "root", "lahiru@123");
                String query = "SELECT * FROM medicine WHERE medid = ?";
                PreparedStatement ps = con.prepareStatement(query);
                ps.setString(1, medid);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    if (rs.getInt("quantity") >= Integer.parseInt(noOfUnits)) {
                        checkStock = 1;

                    } else {
                        JOptionPane.showMessageDialog(null, "Medicine is out of Stcok. Only " + rs.getInt("quantity") + " Left");

                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();

            }
            if (checkStock == 1) {
                DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
                if (cartTable.getRowCount() != 0) {
                    checkMedicineAlreadyExistInCart = 0;
                    for (int i = 0; i < cartTable.getRowCount(); i++) {
                        int cartMedId = Integer.parseInt(dtm.getValueAt(i, 0).toString());
                        if (cartMedId == Integer.parseInt(medid)) {
                            checkMedicineAlreadyExistInCart = 1;
                            JOptionPane.showMessageDialog(null, "Medicine already exists in the Cart");
                            break;
                        }
                    }
                }
                if (checkMedicineAlreadyExistInCart == 0) {
                    dtm.addRow(new Object[]{medid, name, companyname, priceperunit, noOfUnits, totalprice});
                    finalTotalPrice += Double.parseDouble(totalprice);
                    lblFinalTotalPrice.setText(String.format("%.2f", finalTotalPrice));
                    JOptionPane.showMessageDialog(null, "Added Successfully");
                }

                clearMedicineFeilds();
            }

        } else {
            JOptionPane.showMessageDialog(null, "No of Units and Medicine ID Feild is Required");
        }

    }//GEN-LAST:event_btnAddtoCartActionPerformed

    private void cartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTableMouseClicked
        int index = cartTable.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do You want to Remove this Medicine", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            TableModel model = cartTable.getModel();
            String total = model.getValueAt(index, 5).toString();
            finalTotalPrice += Double.parseDouble(total);
            lblFinalTotalPrice.setText(String.format("%.2f", finalTotalPrice));
            ((DefaultTableModel) cartTable.getModel()).removeRow(index);
        }

    }//GEN-LAST:event_cartTableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (finalTotalPrice != 0) {
            billId = getMedId("Bill-");
            DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
            if (cartTable.getRowCount() != 0) {
                for (int i = 0; i < cartTable.getRowCount(); i++) {
                    String medid = dtm.getValueAt(i, 0).toString();
                    int noOfUnits = Integer.parseInt(dtm.getValueAt(i, 4).toString());

                    try {
                        String url = "jdbc:mysql://localhost:3306/pharmacy";
                        con = DriverManager.getConnection(url, "root", "lahiru@123");
                        Statement stmt = con.createStatement();
                        stmt.executeUpdate("UPDATE medicine SET quantity=quantity-" + noOfUnits + " WHERE medid=" + medid);

                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }

                try {
                    SimpleDateFormat myFormat = new SimpleDateFormat("yyyy-MM-dd");
                    Calendar cal = Calendar.getInstance();
                    String url = "jdbc:mysql://localhost:3306/pharmacy";
                    con = DriverManager.getConnection(url, "root", "lahiru@123");
                    PreparedStatement ps = con.prepareStatement("INSERT INTO purchase_medicine (billid, billdate, medid, name, totalpaid, generatedBy, noofunits) VALUES (?, ?, ?, ?, ?, ?, ?)");
                    ps.setString(1, billId);
                    ps.setString(2, myFormat.format(cal.getTime()));
                    for (int i = 0; i < cartTable.getRowCount(); i++) {
                        ps.setString(3, dtm.getValueAt(i, 0).toString());
                        ps.setString(4, dtm.getValueAt(i, 1).toString());
                        ps.setDouble(5, Double.parseDouble(dtm.getValueAt(i, 5).toString()));
                        ps.setString(6, username);
                        ps.setInt(7, Integer.parseInt(dtm.getValueAt(i, 4).toString()));
                        ps.executeUpdate();
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
                com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
                try {

                    PdfWriter.getInstance(doc, new FileOutputStream(PharmacyUtils.billPath + "" + billId + ".pdf"));
                    doc.open();
                    Paragraph pharmacyName = new Paragraph("                              Pharmacy Management System\n");
                    doc.add(pharmacyName);
                    Paragraph starLine = new Paragraph("******************************************************************************************");
                    doc.add(starLine);
                    Paragraph details = new Paragraph("\tBill ID: " + billId + "\nDate: " + new Date() + "\nTotal Paid(LKR): " + finalTotalPrice);
                    doc.add(details);
                    doc.add(starLine);
                    PdfPTable tb1 = new PdfPTable(6);
                    tb1.addCell("Medicine ID");
                    tb1.addCell("Medicine Name");
                    tb1.addCell("Company Name");
                    tb1.addCell("Price Per Unit");
                    tb1.addCell("Number of Units");
                    tb1.addCell("Total Price");
                    for (int i = 0; i < cartTable.getRowCount(); i++) {
                        String a = cartTable.getValueAt(i, 0).toString();
                        String b = cartTable.getValueAt(i, 1).toString();
                        String c = cartTable.getValueAt(i, 2).toString();
                        String d = cartTable.getValueAt(i, 3).toString();
                        String e = cartTable.getValueAt(i, 4).toString();
                        String f = cartTable.getValueAt(i, 5).toString();
                        tb1.addCell(a);
                        tb1.addCell(b);
                        tb1.addCell(c);
                        tb1.addCell(d);
                        tb1.addCell(e);
                        tb1.addCell(f);

                    }
                    doc.add(tb1);
                    doc.add(starLine);
                    Paragraph thankMsg = new Paragraph("Thank You, Please Visit Us Again");
                    doc.add(thankMsg);
                    OpenPdf.openById(String.valueOf(billId));

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                doc.close();
                setVisible(false);
                new SellMedicine(username).setVisible(true);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please Add some Medicine to Cart");
        }

    }//GEN-LAST:event_jButton3ActionPerformed
    private int extractNumericPart(String str) {
        String numericPart = str.replaceAll("\\D+", ""); // Remove non-numeric characters
        return Integer.parseInt(numericPart);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        PharmacyUtils utils = new PharmacyUtils();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddtoCart;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFinalTotalPrice;
    private javax.swing.JTable medicineTable;
    private javax.swing.JTextField txtcompanyname;
    private javax.swing.JTextField txtmedid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtnoofunits;
    private javax.swing.JTextField txtpriceperunit;
    private javax.swing.JTextField txtserach;
    private javax.swing.JTextField txttotalprice;
    // End of variables declaration//GEN-END:variables
}
